{"ast":null,"code":"import _toConsumableArray from \"/Users/aboyce2/Documents/2as/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/aboyce2/Documents/2as/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aboyce2/Documents/2as/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aboyce2/Documents/2as/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aboyce2/Documents/2as/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aboyce2/Documents/2as/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/aboyce2/Documents/2as/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/aboyce2/Documents/2as/client/src/components/SkillsStore.jsx\";\nimport React from 'react';\nimport { Button, CardTitle, CardSubtitle, Form, Label, FormGroup, CustomInput, Input, InputGroup } from 'reactstrap';\nimport Tag from './Tag';\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio } from 'availity-reactstrap-validation';\n\nvar SkillsStore =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SkillsStore, _React$Component);\n\n  function SkillsStore(props) {\n    var _this;\n\n    _classCallCheck(this, SkillsStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SkillsStore).call(this, props));\n\n    _this.handleOptionChange = function (event) {\n      _this.setState({\n        selectedOption: event.target.value\n      }); // console.log('selectedOption change');\n\n    };\n\n    _this.handleDescripitionChange = _this.handleDescripitionChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.handleOptionChange = this.handleOptionChange.bind(this);\n    // skills array updated here everytime the add to cart button is clicked\n\n    _this.state = {\n      count: 0,\n      isSkillsFull: false,\n      skills: [],\n      name: '',\n      description: '',\n      selectedOption: 'justOnce',\n      message: ''\n    };\n    _this.skills = [];\n    _this.skillsForm = React.createRef();\n    return _this;\n  }\n\n  _createClass(SkillsStore, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {// console.log(\"WILL MOUNT\");\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// const skillsForm = ReactDOM.findDomNode(this.refs.skillsForm);\n      // console.log(\"Did Mount\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(\"HAS RENDERED\");\n      return React.createElement(\"div\", {\n        className: \"SkillForm-Component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"search or select a skill category\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"try 'gardening' \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"search results\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"popular\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"recently viewed\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"specify how long you need this skill\")), React.createElement(FormGroup, {\n        check: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"justOnce\",\n        value: \"justOnce\",\n        checked: this.state.selectedOption === \"justOnce\",\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), ' ', \"just once\")), React.createElement(FormGroup, {\n        check: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"permanently\",\n        value: \"permanently\",\n        checked: this.state.selectedOption === \"permanently\",\n        onChange: this.handleOptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), ' ', \"permanently\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"describe what you need from this skill\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Input, {\n        text: \"text\",\n        type: \"textarea\",\n        name: \"text\",\n        id: \"description\",\n        value: this.state.description,\n        onChange: this.handleDescripitionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        color: \"success\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"add to cart\"))));\n    } //end render\n\n  }, {\n    key: \"handleDescripitionChange\",\n    value: function handleDescripitionChange(event) {\n      this.setState({\n        description: event.target.value\n      }); // console.log('description changed to: ' + this.state.description);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n\n      if (this.state.skills.length <= 2) {\n        // alert(\"good to go: \" + this.state.count)\n        this.setState({\n          count: this.state.count + 1\n        }); // use skill name as unique key - there should be no duplicates\n\n        var skillObject = createSkill(this.state.description, this.state.selectedOption, this.state.count);\n        Object.freeze(skillObject); // console.log(\"this skills description: \" + skillObject.description);\n        //update local state of SkillsStore for skills array\n\n        this.skills.push(skillObject);\n        this.setState(function (prevState) {\n          return {\n            skills: [].concat(_toConsumableArray(prevState.skills), [skillObject])\n          };\n        }); //callback up to SkillStore component in Trade parent to update parent skills array state\n        // console.log(this.state.skills);\n        // this.props.handleSkills(this.state.skills);\n\n        this.props.handleSkills(skillObject); // console.log(\"its working\");\n\n        this.resetSkillForm(); // console.log(this.refs.skillForm);\n        // this.form && this.form.reset();\n      } else {\n        window.alert(\"Trade Cart is FULL. Remove some items or submit!\"); // this.resetSkillForm();\n        // console.log(this.refs.skillForm);\n        // this.form && this.form.reset();\n      }\n    } //end handleSubmit\n\n  }, {\n    key: \"resetSkillForm\",\n    value: function resetSkillForm() {\n      this.setState({\n        name: '',\n        description: \"\"\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevState, prevProps, snapshot) {// console.log(\"SKILLSTORE ARRAY: \");\n      // console.log(this.skills);\n    }\n  }]);\n\n  return SkillsStore;\n}(React.Component); //END COMPONENT\n// skill factory function\n\n\nexport { SkillsStore as default };\n\nfunction createSkill(des, length, id) {\n  return {\n    description: des,\n    lengthOfTime: length,\n    id: id\n  };\n}","map":{"version":3,"sources":["/Users/aboyce2/Documents/2as/client/src/components/SkillsStore.jsx"],"names":["React","Button","CardTitle","CardSubtitle","Form","Label","FormGroup","CustomInput","Input","InputGroup","Tag","AvForm","AvField","AvGroup","AvInput","AvFeedback","AvRadioGroup","AvRadio","SkillsStore","props","handleOptionChange","event","setState","selectedOption","target","value","handleDescripitionChange","bind","handleSubmit","state","count","isSkillsFull","skills","name","description","message","skillsForm","createRef","preventDefault","length","skillObject","createSkill","Object","freeze","push","prevState","handleSkills","resetSkillForm","window","alert","prevProps","snapshot","Component","des","id","lengthOfTime"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  CardTitle,\n  CardSubtitle,\n  Form,\n  Label,\n  FormGroup,\n  CustomInput,\n  Input,\n  InputGroup\n} from 'reactstrap';\nimport Tag from './Tag';\nimport {\n  AvForm,\n  AvField,\n  AvGroup,\n  AvInput,\n  AvFeedback,\n  AvRadioGroup,\n  AvRadio\n} from 'availity-reactstrap-validation';\n\nexport default class SkillsStore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDescripitionChange = this.handleDescripitionChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // this.handleOptionChange = this.handleOptionChange.bind(this);\n    // skills array updated here everytime the add to cart button is clicked\n    this.state = {\n      count: 0,\n      isSkillsFull: false,\n      skills: [],\n      name: '',\n      description: '',\n      selectedOption: 'justOnce',\n      message: ''\n    }\n    this.skills = [];\n    this.skillsForm = React.createRef();\n  }\n\n  componentWillMount() {\n    // console.log(\"WILL MOUNT\");\n  }\n\n  componentDidMount(){\n    // const skillsForm = ReactDOM.findDomNode(this.refs.skillsForm);\n    // console.log(\"Did Mount\");\n\n  }\n\n  render() {\n    // console.log(\"HAS RENDERED\");\n    return (\n      <div className=\"SkillForm-Component\">\n      <Form onSubmit={this.handleSubmit}>\n      <FormGroup>\n        <CardTitle>search or select a skill category</CardTitle>\n      </FormGroup>\n      <FormGroup>\n        <InputGroup>\n          <Input placeholder=\"try 'gardening' \"/>\n        </InputGroup>\n      </FormGroup>\n      <FormGroup>\n        <CardSubtitle>search results</CardSubtitle>\n        <hr/>\n      </FormGroup>\n      <FormGroup>\n        <CardSubtitle>popular</CardSubtitle>\n        <hr/>\n      </FormGroup>\n      <FormGroup>\n        <CardSubtitle>recently viewed</CardSubtitle>\n        <hr/>\n      </FormGroup>\n      <FormGroup>\n        <CardSubtitle>specify how long you need this skill</CardSubtitle>\n      </FormGroup>\n      <FormGroup check=\"check\">\n        <Label check=\"check\">\n          <Input type=\"radio\" name=\"justOnce\" value=\"justOnce\" checked={this.state.selectedOption === \"justOnce\"} onChange={this.handleOptionChange}/>{' '}\n          just once\n        </Label>\n      </FormGroup>\n      <FormGroup check=\"check\">\n        <Label check=\"check\">\n          <Input type=\"radio\" name=\"permanently\" value=\"permanently\" checked={this.state.selectedOption === \"permanently\"} onChange={this.handleOptionChange}/>{' '}\n          permanently\n        </Label>\n      </FormGroup>\n      <FormGroup>\n        <CardSubtitle>describe what you need from this skill</CardSubtitle>\n      </FormGroup>\n      <FormGroup>\n        <Input text=\"text\" type=\"textarea\" name=\"text\" id=\"description\" value={this.state.description} onChange={this.handleDescripitionChange}/>\n      </FormGroup>\n      <FormGroup>\n        <Button type=\"submit\" color=\"success\" value=\"Submit\">add to cart</Button>\n        {/* <Button color=\"danger\" onClick={this.toggle}>cancel</Button> */}\n      </FormGroup>\n    </Form>\n    </div>\n    )\n  }//end render\n\n  handleOptionChange = (event) => {\n    this.setState({selectedOption: event.target.value});\n    // console.log('selectedOption change');\n  }\n\n  handleDescripitionChange(event) {\n    this.setState({description: event.target.value});\n    // console.log('description changed to: ' + this.state.description);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if(this.state.skills.length <= 2) {\n      // alert(\"good to go: \" + this.state.count)\n      this.setState({\n        count: this.state.count + 1\n      });\n      // use skill name as unique key - there should be no duplicates\n      const skillObject = createSkill(this.state.description, this.state.selectedOption, this.state.count);\n      Object.freeze(skillObject);\n      // console.log(\"this skills description: \" + skillObject.description);\n      //update local state of SkillsStore for skills array\n      this.skills.push(skillObject);\n      this.setState(prevState => ({\n        skills: [\n          ...prevState.skills,\n          skillObject\n        ]\n      }));\n      //callback up to SkillStore component in Trade parent to update parent skills array state\n      // console.log(this.state.skills);\n      // this.props.handleSkills(this.state.skills);\n      this.props.handleSkills(skillObject);\n      // console.log(\"its working\");\n      this.resetSkillForm();\n      // console.log(this.refs.skillForm);\n      // this.form && this.form.reset();\n    } else {\n      window.alert(\"Trade Cart is FULL. Remove some items or submit!\");\n      // this.resetSkillForm();\n      // console.log(this.refs.skillForm);\n      // this.form && this.form.reset();\n    }\n  } //end handleSubmit\n\n  resetSkillForm(){\n    this.setState({\n      name: '',\n      description: \"\"\n    })\n  }\n\n  componentDidUpdate(prevState, prevProps, snapshot) {\n    // console.log(\"SKILLSTORE ARRAY: \");\n    // console.log(this.skills);\n  }\n\n} //END COMPONENT\n\n// skill factory function\nfunction createSkill(des, length, id) {\n  return {description: des, lengthOfTime: length, id: id}\n}\n"]},"metadata":{},"sourceType":"module"}