{"ast":null,"code":"var _jsxFileName = \"/Users/aboyce2/Documents/pix-ux/client/src/components/layout/Menu.tsx\";\nimport React from 'react';\n\nvar _require = require('../../config/ConfigFunctions'),\n    items = _require.items; //should be as MenuItem interface\n\n\nvar Menu = function Menu(props) {\n  var items = props.items;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, items.map(function (item, index) {\n    var submenu = item;\n\n    if (submenu.items != null) {\n      return React.createElement(Submenu, {\n        key: index,\n        submenu: submenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(MenuItem, {\n        key: index,\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    }\n  }));\n};\n\nexport default Menu;","map":{"version":3,"sources":["/Users/aboyce2/Documents/pix-ux/client/src/components/layout/Menu.tsx"],"names":["React","require","items","Menu","props","map","item","index","submenu"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;;eACkBC,OAAO,CAAC,8BAAD,C;IAAjBC,K,YAAAA,K,EAER;;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAgB;AAAA,MACjBF,KADiB,GACPE,KADO,CACjBF,KADiB;AAGzB,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD,EAAYC,KAAZ,EAA0B;AACnC,QAAMC,OAAO,GAAGF,IAAhB;;AAEA,QAAIE,OAAO,CAACN,KAAR,IAAiB,IAArB,EAA2B;AACzB,aAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEK,KAAd;AAAqB,QAAA,OAAO,EAAEC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAED,KAAf;AAAsB,QAAA,IAAI,EAAED,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GARA,CADH,CADF;AAaH,CAhBD;;AAiBA,eAAeH,IAAf","sourcesContent":["import React, { Component } from 'react';\nconst { items } = require('../../config/ConfigFunctions');\n\n//should be as MenuItem interface\nconst Menu = (props: any) => {\n    const { items } = props;\n  \n    return (\n      <React.Fragment>\n        {items.map((item: any, index:any) => {\n          const submenu = item as Submenu;\n  \n          if (submenu.items != null) {\n            return <Submenu key={index} submenu={submenu} />;\n          } else {\n            return <MenuItem key={index} item={item} />;\n          }\n        })}\n      </React.Fragment>\n    );\n};\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}