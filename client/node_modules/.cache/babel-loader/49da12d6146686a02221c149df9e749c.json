{"ast":null,"code":"import _classCallCheck from \"/Users/aboyce2/Documents/2as/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aboyce2/Documents/2as/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aboyce2/Documents/2as/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aboyce2/Documents/2as/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aboyce2/Documents/2as/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aboyce2/Documents/2as/client/src/components/auth/SignUp.tsx\";\nimport * as React from 'react';\nimport { Button } from 'reactstrap';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Container } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ActionButton from '../layout/Button'; // const validateSignUpUI = require('../../validation/validateSignUpUI');\n// pass in validation module\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignUp, _React$Component);\n\n  function SignUp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUp).call(this, props));\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      var newUser = {\n        firstName: _this.state.firstName,\n        lastName: _this.state.lastName,\n        email: _this.state.email,\n        password: _this.state.password,\n        confirmPassword: _this.state.confirmPassword\n      };\n      axios.post('api/users/signup', newUser).then(function (res) {\n        return alert(\"Thank you for creating an account, \" + res.data.firstName);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var _ref,\n          email = _ref.email,\n          value = _ref.value;\n\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.handleSignUpSumbit = function () {\n      alert('submit');\n    };\n\n    _this.cancelSignUp = function () {\n      alert('cancel');\n    };\n\n    _this.handleDisableSubmitButton = function () {};\n\n    _this.state = {\n      isSubmitDisabled: true,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\" // errors: {}\n\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isSubmitDisabled = _this$props.isSubmitDisabled,\n          firstName = _this$props.firstName,\n          lastName = _this$props.lastName,\n          email = _this$props.email,\n          password = _this$props.password,\n          confirmPassword = _this$props.confirmPassword;\n      return React.createElement(\"div\", {\n        className: \"SignUp-Component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSignUpSumbit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"back\")), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Sign up for zas\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        placeholder: \"Email address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"exampleEmail\",\n        className: \"validation-text\",\n        id: \"email-validation-signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"*Must be valid email address\"), React.createElement(Input, {\n        name: \"firstName\",\n        id: \"firstName\",\n        value: firstName,\n        onChange: this.handleChange,\n        placeholder: \"First name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"exampleEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"*Must not be left blank\"), React.createElement(Input, {\n        name: \"lastName\",\n        id: \"lastName\",\n        value: lastName,\n        onChange: this.handleChange,\n        placeholder: \"Last name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"exampleEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"*Must not be left blank\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: this.handleChange,\n        placeholder: \"Create a password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"exampleEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"*Must be valid password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        id: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: this.handleChange,\n        placeholder: \"Confirm above password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"exampleEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"*Must match password created above\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"// where is handle\", React.createElement(ActionButton, {\n        isSubmitDisabled: isSubmitDisabled,\n        onClick: this.handleSignUpSumbit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.cancelSignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return SignUp;\n}(React.Component);\n\nexport { SignUp as default };","map":{"version":3,"sources":["/Users/aboyce2/Documents/2as/client/src/components/auth/SignUp.tsx"],"names":["React","Button","Form","FormGroup","Label","Input","Container","Link","axios","ActionButton","SignUp","props","onSubmit","event","preventDefault","newUser","firstName","state","lastName","email","password","confirmPassword","post","then","res","alert","data","catch","err","console","log","handleChange","value","setState","name","target","handleSignUpSumbit","cancelSignUp","handleDisableSubmitButton","isSubmitDisabled","e","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Button} from 'reactstrap';\nimport {Form, FormGroup, Label, Input} from 'reactstrap';\nimport {Container} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport ActionButton from '../layout/Button';\n// const validateSignUpUI = require('../../validation/validateSignUpUI');\n// pass in validation module\n\ninterface IProps{\n  isSubmitDisabled: boolean,\n  firstName: string,\n  lastName: string,\n  email: string,\n  password: string,\n  confirmPassword: string,\n}\n\ninterface IState{\n  isSubmitDisabled: boolean,\n  firstName: string,\n  lastName: string,\n  email: string,\n  password: string,\n  confirmPassword: string,\n}\n\nexport default class SignUp extends React.Component<IProps,IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isSubmitDisabled: true,\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      // errors: {}\n    };\n  }\n\n  onSubmit = (event: React.FormEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    const newUser = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    }\n    axios.post('api/users/signup', newUser)\n    .then(res => alert(\"Thank you for creating an account, \" + res.data.firstName))\n    .catch(err => console.log(err))\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) : void => {\n      const {email, value}: {email: string, value: string}\n      this.setState(\n        { name: event.target.value }\n      );\n  }\n\n  handleSignUpSumbit = () =>{\n    alert('submit');\n  }\n\n  cancelSignUp = () => {\n    alert('cancel');\n  }\n\n  handleDisableSubmitButton = () =>{\n\n  }\n\n  public render(): React.ReactNode {\n    let {isSubmitDisabled, firstName, lastName, email, password, confirmPassword} = this.props;\n\n    return (<div className=\"SignUp-Component\">\n      <Container>\n        <Form onSubmit={this.handleSignUpSumbit}>\n          <Link to=\"/\">\n            <Button>\n              back\n            </Button>\n          </Link>\n          <h1>Sign up for zas</h1>\n          <FormGroup>\n          <Input type=\"email\" name=\"email\" id=\"email\" value={email} onChange={(e) => this.handleChange(e)} placeholder=\"Email address\"/>\n          <Label for=\"exampleEmail\" className=\"validation-text\" id=\"email-validation-signup\">*Must be valid email address</Label>\n\n          <Input name=\"firstName\" id=\"firstName\" value={firstName} onChange={this.handleChange} placeholder=\"First name\"/>\n          <Label for=\"exampleEmail\">*Must not be left blank</Label>\n\n          <Input name=\"lastName\" id=\"lastName\" value={lastName} onChange={this.handleChange} placeholder=\"Last name\"/>\n          <Label for=\"exampleEmail\">*Must not be left blank</Label>\n\n          <Input type=\"password\" name=\"password\" id=\"password\" value={password} onChange={this.handleChange} placeholder=\"Create a password\"/>\n          <Label for=\"exampleEmail\">*Must be valid password</Label>\n\n          <Input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" value={confirmPassword} onChange={this.handleChange} placeholder=\"Confirm above password\"/>\n          <Label for=\"exampleEmail\">*Must match password created above</Label>\n          <br></br>\n          </FormGroup>\n          <FormGroup>\n        // where is handle\n          <ActionButton isSubmitDisabled={isSubmitDisabled} onClick={this.handleSignUpSumbit}>Sign Up</ActionButton>\n          <Button color=\"secondary\" onClick={this.cancelSignUp}>Cancel</Button>\n        </FormGroup>\n        </Form>\n      </Container>\n    </div>);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}