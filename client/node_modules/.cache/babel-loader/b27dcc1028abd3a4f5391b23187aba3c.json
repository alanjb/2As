{"ast":null,"code":"import _classCallCheck from \"/Users/aboyce2/Documents/2as/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aboyce2/Documents/2as/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aboyce2/Documents/2as/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aboyce2/Documents/2as/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aboyce2/Documents/2as/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aboyce2/Documents/2as/client/src/components/layout/Navbar.tsx\";\nimport React from 'react';\nimport { Nav, Navbar, NavbarBrand, NavItem, NavLink, UncontrolledDropdown, DropdownToggle } from 'reactstrap';\nimport PixLogoWhite from '../../components/assets/PixLogoWhite';\nimport Caret from '../../components/assets/Caret';\nimport NavDropdown from './NavDropdown';\nimport { DropdownMenu, DropdownItem } from 'reactstrap';\n\nvar Navigation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Navigation, _React$Component);\n\n  function Navigation(props) {\n    var _this;\n\n    _classCallCheck(this, Navigation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navigation).call(this, props));\n\n    _this.toggle = function () {\n      _this.setState({\n        // isOpen: !this.state.isOpen,\n        isDropdownClosed: !_this.state.isDropdownClosed\n      }); // set the current state of the navdropdown into variable\n\n\n      var currentStateOfNavdropDown = _this.state.isDropdownClosed;\n      var navdropdown = document.getElementById('navdropdown'); //ref dropdown\n\n      if (currentStateOfNavdropDown === true) {\n        navdropdown.style.left = '10px';\n        navdropdown.style.visibility = 'visible';\n      } else {\n        navdropdown.style.left = '-600px';\n        navdropdown.style.visibility = 'hidden';\n      }\n    };\n\n    _this.state = {\n      isDropdownClosed: true\n    };\n    return _this;\n  }\n\n  _createClass(Navigation, [{\n    key: \"render\",\n    // applySpinAnimation(event) {\n    //   const caret = document.getElementById('caret');\n    //   console.log('test');\n    //   caret.classList.add += \"caretAnimation\";\n    // }\n    value: function render() {\n      var isDropdownClosed = this.state.isDropdownClosed;\n      return React.createElement(\"div\", {\n        className: \"Navbar-Component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        className: \"navbar\",\n        id: \"navbar\",\n        expand: \"md\",\n        fixed: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(NavbarBrand, {\n        onClick: this.toggle,\n        className: \"NavBrand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(PixLogoWhite, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Caret, {\n        className: \"caret\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"/components/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Communities\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"/components/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Portals\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"/components/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"RFIs\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        href: \"/components/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Invite New User\")), React.createElement(UncontrolledDropdown, {\n        nav: true,\n        inNavbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        nav: true,\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"External Applications\"), React.createElement(DropdownMenu, {\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Option 1\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Option 2\"), React.createElement(DropdownItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Reset\"))))), React.createElement(NavDropdown, {\n        isDropdownClosed: isDropdownClosed,\n        ref: \"navbardown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Navigation;\n}(React.Component);\n\nexport { Navigation as default };","map":{"version":3,"sources":["/Users/aboyce2/Documents/2as/client/src/components/layout/Navbar.tsx"],"names":["React","Nav","Navbar","NavbarBrand","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","PixLogoWhite","Caret","NavDropdown","DropdownMenu","DropdownItem","Navigation","props","toggle","setState","isDropdownClosed","state","currentStateOfNavdropDown","navdropdown","document","getElementById","style","left","visibility","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Container,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle\n} from 'reactstrap';\nimport PixLogoWhite from '../../components/assets/PixLogoWhite';\nimport Caret from '../../components/assets/Caret';\nimport NavDropdown from './NavDropdown';\nimport { DropdownMenu, DropdownItem } from 'reactstrap';\n\n\ninterface IState{\n  isDropdownClosed: boolean,\n\n}\n\nexport default class Navigation extends React.Component<{}, IState> {\n\n  constructor(props:any) {\n    super(props);\n    this.state = {\n      isDropdownClosed: true,\n    }\n  }\n\n  toggle = () => {\n    this.setState({\n      // isOpen: !this.state.isOpen,\n      isDropdownClosed: !this.state.isDropdownClosed\n    });\n    // set the current state of the navdropdown into variable\n    const currentStateOfNavdropDown = this.state.isDropdownClosed;\n    const navdropdown = document.getElementById('navdropdown');\n    //ref dropdown\n\n\n    if (currentStateOfNavdropDown === true) {\n      navdropdown.style.left = '10px';\n      navdropdown.style.visibility = 'visible';\n    } else {\n      navdropdown.style.left = '-600px';\n      navdropdown.style.visibility = 'hidden';\n    }\n  }\n\n  // applySpinAnimation(event) {\n  //   const caret = document.getElementById('caret');\n  //   console.log('test');\n  //   caret.classList.add += \"caretAnimation\";\n  // }\n\n  render() {\n    const {isDropdownClosed} = this.state;\n    return (<div className=\"Navbar-Component\">\n      <Navbar className=\"navbar\" id=\"navbar\" expand=\"md\" fixed=\"top\">\n          <NavbarBrand onClick={this.toggle} className=\"NavBrand\">\n            <PixLogoWhite/>\n            <Caret className=\"caret\"/>\n          </NavbarBrand>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/components/\">Communities</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/components/\">Portals</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/components/\">RFIs</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/components/\">Invite New User</NavLink>\n            </NavItem>\n\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                External Applications\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>\n                  Reset\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n      </Navbar>\n      <NavDropdown isDropdownClosed={isDropdownClosed} ref={\"navbardown\"}/>\n    </div>);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}