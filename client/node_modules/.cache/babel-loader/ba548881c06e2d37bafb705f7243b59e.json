{"ast":null,"code":"import _classCallCheck from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aboyce2/Documents/pix-ux/client/src/components/layout/Navbar.tsx\";\nimport React from 'react';\nimport PiXIcon from '../../components/assets/PiXIcon';\nimport SearchBar from '../layout/SearchBar';\nimport NavPanel from '../layout/NavPanel';\nimport Caret from '../assets/Caret';\nimport PiXChatIcon from '../../components/assets/PiXChatIcon';\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Navbar, _React$Component);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navbar).call(this, props));\n    _this.state = {\n      isNavPanelOpen: false,\n      isFeedbackOpen: false\n    };\n\n    _this.toggleFeedBack = function () {\n      _this.setState({\n        isFeedbackOpen: !_this.state.isFeedbackOpen\n      });\n    };\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"toggle\",\n    value: function toggle() {\n      var screenWidth = window.screen.width;\n      var innerWidth = window.innerWidth;\n\n      if (screenWidth < 1200 || innerWidth < 1200) {\n        this.setState(function (prevState) {\n          return {\n            isNavPanelOpen: !prevState.isNavPanelOpen\n          };\n        });\n      } else {\n        window.location.href = '/';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isNavPanelOpen = this.state.isNavPanelOpen;\n      return React.createElement(\"div\", {\n        className: \"Navbar-Component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(NavPanel, {\n        isOpen: isNavPanelOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(PiXIcon, {\n        toggleNavPanel: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Caret, {\n        isOpen: isNavPanelOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(SearchBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(PiXChatIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Navbar;\n}(React.Component);\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/aboyce2/Documents/pix-ux/client/src/components/layout/Navbar.tsx"],"names":["React","PiXIcon","SearchBar","NavPanel","Caret","PiXChatIcon","Navbar","props","state","isNavPanelOpen","isFeedbackOpen","toggleFeedBack","setState","toggle","bind","screenWidth","window","screen","width","innerWidth","prevState","location","href","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAuB;AAAA;;AAAA;;AACrB,gFAAMA,KAAN;AADqB,UAKvBC,KALuB,GAKR;AACbC,MAAAA,cAAc,EAAE,KADH;AAEbC,MAAAA,cAAc,EAAE;AAFH,KALQ;;AAAA,UAyBhBC,cAzBgB,GAyBC,YAAM;AAC5B,YAAKC,QAAL,CAAc;AACZF,QAAAA,cAAc,EAAE,CAAC,MAAKF,KAAL,CAAWE;AADhB,OAAd;AAGD,KA7BsB;;AAErB,UAAKG,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AAFqB;AAGtB;;;;6BAOe;AACd,UAAIC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcC,KAAhC;AACA,UAAIC,UAAU,GAAGH,MAAM,CAACG,UAAxB;;AACA,UAAGJ,WAAW,GAAC,IAAZ,IAAoBI,UAAU,GAAC,IAAlC,EAAuC;AACrC,aAAKP,QAAL,CAAc,UAACQ,SAAD,EAAe;AAC3B,iBAAO;AACLX,YAAAA,cAAc,EAAE,CAACW,SAAS,CAACX;AADtB,WAAP;AAGD,SAJD;AAKD,OAND,MAOI;AACFO,QAAAA,MAAM,CAACK,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;AACF;;;6BAQO;AAAA,UACEb,cADF,GACqB,KAAKD,KAD1B,CACEC,cADF;AAEN,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEA,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AAAS,QAAA,cAAc,EAAE,KAAKI,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEJ,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CADF;AAYD;;;;EA9CkBT,KAAK,CAACuB,S;;AAmE3B,eAAejB,MAAf","sourcesContent":["import React from 'react';\nimport PiXIcon from '../../components/assets/PiXIcon';\nimport SearchBar from '../layout/SearchBar';\nimport NavPanel from '../layout/NavPanel';\nimport Caret from '../assets/Caret';\nimport PiXChatIcon from '../../components/assets/PiXChatIcon';\n\nclass Navbar extends React.Component<MyProps, State> {\n  constructor(props: any){\n    super(props);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  state: State = {\n    isNavPanelOpen: false,\n    isFeedbackOpen: false\n  };\n\n  public toggle() {\n    let screenWidth = window.screen.width;\n    let innerWidth = window.innerWidth;\n    if(screenWidth<1200 || innerWidth<1200){\n      this.setState((prevState) => {\n        return {\n          isNavPanelOpen: !prevState.isNavPanelOpen\n        }\n      });\n    }\n    else{\n      window.location.href = '/';\n    }\n  }\n\n  public toggleFeedBack = () => {\n    this.setState({ \n      isFeedbackOpen: !this.state.isFeedbackOpen \n    });\n  };\n\n  render(){\n    const { isNavPanelOpen } = this.state;\n    return(\n      <div className=\"Navbar-Component\">\n        <div className=\"container\">\n          <NavPanel isOpen={isNavPanelOpen}/>\n          <PiXIcon toggleNavPanel={this.toggle}/>\n          <Caret isOpen={isNavPanelOpen}/>\n          <SearchBar/>\n          <PiXChatIcon/>\n        </div>\n\n      </div>\n    );\n  }\n}\n\ntype MyProps = {\n  loggedInPerson: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    username: string;\n  };\n  unreadMailCount: number;\n  onLogout: () => any;\n};\n\ntype Props = MyProps;\n\ntype State = {\n  isNavPanelOpen: boolean;\n  isFeedbackOpen: boolean;\n};\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}