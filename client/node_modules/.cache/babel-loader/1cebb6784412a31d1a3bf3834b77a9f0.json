{"ast":null,"code":"import _classCallCheck from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/aboyce2/Documents/pix-ux/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/aboyce2/Documents/pix-ux/client/src/components/layout/Navbar.tsx\";\nimport React from 'react';\nimport PiXIcon from '../../components/assets/PiXIcon';\nimport SearchBar from '../layout/SearchBar';\nimport NavPanel from '../layout/NavPanel';\nimport Caret from '../assets/Caret';\nimport PiXChatIcon from '../../components/assets/PiXChatIcon';\n\nvar menuItems = require('../../PiXDesignGuideConfigFunctions'); // console.log(menuItems);\n\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Navbar, _React$Component);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navbar).call(this, props));\n    _this.state = {\n      isNavPanelOpen: false,\n      isFeedbackOpen: false\n    };\n\n    _this.toggleFeedBack = function () {\n      _this.setState(function (prevState) {\n        isFeedbackOpen: !prevState.isFeedbackOpen;\n      });\n    };\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"checkScreenWidth\",\n    value: function checkScreenWidth(screenWidth, innerWidth) {\n      // let screenWidth = window.screen.width;\n      // let innerWidth = window.innerWidth;\n      if (screenWidth < 1200 || innerWidth < 1200) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var screenWidth = window.screen.width;\n      var innerWidth = window.innerWidth;\n\n      if (screenWidth < 1200 || innerWidth < 1200) {\n        this.setState(function (prevState) {\n          return {\n            isNavPanelOpen: !prevState.isNavPanelOpen\n          };\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isNavPanelOpen = this.state.isNavPanelOpen;\n      return React.createElement(\"div\", {\n        className: \"Navbar-Component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(NavPanel, {\n        isOpen: isNavPanelOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(PiXIcon, {\n        toggleNavPanel: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Caret, {\n        isOpen: isNavPanelOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(SearchBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(PiXChatIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Navbar;\n}(React.Component);\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/aboyce2/Documents/pix-ux/client/src/components/layout/Navbar.tsx"],"names":["React","PiXIcon","SearchBar","NavPanel","Caret","PiXChatIcon","menuItems","require","Navbar","props","state","isNavPanelOpen","isFeedbackOpen","toggleFeedBack","setState","prevState","toggle","bind","screenWidth","innerWidth","window","screen","width","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;AACA,IAAMC,SAAS,GAAGC,OAAO,CAAC,qCAAD,CAAzB,C,CAEA;;;IACMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAuB;AAAA;;AAAA;;AACrB,gFAAMA,KAAN;AADqB,UAKvBC,KALuB,GAKR;AACbC,MAAAA,cAAc,EAAE,KADH;AAEbC,MAAAA,cAAc,EAAE;AAFH,KALQ;;AAAA,UAiChBC,cAjCgB,GAiCC,YAAM;AAC5B,YAAKC,QAAL,CAAc,UAACC,SAAD,EAAe;AAC3BH,QAAAA,cAAc,EAAE,CAACG,SAAS,CAACH,cAAX;AACjB,OAFD;AAGD,KArCsB;;AAErB,UAAKI,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,uDAAd;AAFqB;AAGtB;;;;qCAOuBC,W,EAAqBC,U,EAA6B;AACxE;AACA;AACA,UAAGD,WAAW,GAAC,IAAZ,IAAoBC,UAAU,GAAC,IAAlC,EAAuC;AACrC,eAAO,IAAP;AACD,OAFD,MAGI;AACF,eAAO,KAAP;AACD;AACF;;;6BAEe;AACd,UAAID,WAAW,GAAGE,MAAM,CAACC,MAAP,CAAcC,KAAhC;AACA,UAAIH,UAAU,GAAGC,MAAM,CAACD,UAAxB;;AACA,UAAGD,WAAW,GAAC,IAAZ,IAAoBC,UAAU,GAAC,IAAlC,EAAuC;AACrC,aAAKL,QAAL,CAAc,UAACC,SAAD,EAAe;AAC3B,iBAAO;AACLJ,YAAAA,cAAc,EAAE,CAACI,SAAS,CAACJ;AADtB,WAAP;AAGD,SAJD;AAKD;AACF;;;6BAQO;AAAA,UACEA,cADF,GACqB,KAAKD,KAD1B,CACEC,cADF;AAEN,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEA,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AAAS,QAAA,cAAc,EAAE,KAAKK,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEL,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAYE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADF;AAgBD;;;;EA1DkBX,KAAK,CAACuB,S;;AA+E3B,eAAef,MAAf","sourcesContent":["import React from 'react';\nimport PiXIcon from '../../components/assets/PiXIcon';\nimport SearchBar from '../layout/SearchBar';\nimport NavPanel from '../layout/NavPanel';\nimport Caret from '../assets/Caret';\nimport PiXChatIcon from '../../components/assets/PiXChatIcon';\nconst menuItems = require('../../PiXDesignGuideConfigFunctions');\n\n// console.log(menuItems);\nclass Navbar extends React.Component<Props, State> {\n  constructor(props: any){\n    super(props);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  state: State = {\n    isNavPanelOpen: false,\n    isFeedbackOpen: false\n  };\n\n  public checkScreenWidth(screenWidth: number, innerWidth: number): boolean {\n    // let screenWidth = window.screen.width;\n    // let innerWidth = window.innerWidth;\n    if(screenWidth<1200 || innerWidth<1200){\n      return true; \n    }\n    else{\n      return false;\n    }\n  }\n\n  public toggle() {\n    let screenWidth = window.screen.width;\n    let innerWidth = window.innerWidth;\n    if(screenWidth<1200 || innerWidth<1200){\n      this.setState((prevState) => {\n        return {\n          isNavPanelOpen: !prevState.isNavPanelOpen\n        }\n      });\n    }\n  }\n\n  public toggleFeedBack = () => {\n    this.setState((prevState) => { \n      isFeedbackOpen: !prevState.isFeedbackOpen \n    });\n  };\n\n  render(){\n    const { isNavPanelOpen } = this.state;\n    return(\n      <div className=\"Navbar-Component\">\n        <NavPanel isOpen={isNavPanelOpen}/>\n        <PiXIcon toggleNavPanel={this.toggle}/>\n        <Caret isOpen={isNavPanelOpen}/>\n        <SearchBar/>\n        \n        {/*\n        1. import the menu object from the function\n        2. There should be logic to determine when the nav items should\n        be made invisible \n        3. add the items to the navbar by mapping them to nav items\n        */}\n        <PiXChatIcon/>\n      </div>\n    );\n  }\n}\n\ntype MyProps = {\n  loggedInPerson: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    username: string;\n  };\n  unreadMailCount: number;\n  onLogout: () => any;\n};\n\ntype Props = MyProps;\n\ntype State = {\n  isNavPanelOpen: boolean;\n  isFeedbackOpen: boolean;\n};\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}